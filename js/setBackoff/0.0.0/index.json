{
  "title": "setBackoff",
  "url": "js/setBackoff/0.0.0",
  "content": "         &lt;title&gt;John Henry&lt;/title&gt; &lt;link rel=&quot;canonical&quot; href=&quot;https://johnhenry.github.io/&quot; /&gt; &lt;meta name=&quot;description&quot; content=&quot;John Henry&#39;s Person Portfolio and Blog&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot; /&gt; &lt;meta name=&quot;theme-color&quot; content=&quot;#343233&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;meta name=&quot;keywords&quot; content=&quot;fun,math,engineering,science,experiments,programming&quot; /&gt; &lt;meta name=&quot;author&quot; content=&quot;John Henry&quot; /&gt; &lt;link rel=&quot;icon&quot; href=&quot;https://johnhenry.github.io/image/iajh.png&quot; type=&quot;image/png&quot; /&gt;         # Timers    setIntervalWait    setIntervalWait  has a similar API to set the built-in  setInterval  function, but it waits for the previous instance callback to be completed before calling the next. Additonally  clearIntervalWait  returns true if the id exists, and false if it does not.      import  setInterval ,   {  clear  as  cleaIntervalWait ,   }   from   &quot;./set-interval-wait.mjs&quot;  ;   const  id  =   setInterval (()  =&gt;   {   /* function that must finish */   },   100 ) ;   setTimeout (()  =&gt;   clearIntervalWait (id) ,   2000 ) ;      setRetry    setRetry  has a similar API to set the built-in  setTimeout  and  setInterval  functions. The difference is that it will retry the callback if it fails (throws an error) at constant intervals.      import  setRetry ,   {  clear  as  clearRetry  }   from   &quot;./set-retry.mjs&quot;  ;   const  id  =   setRetry (()  =&gt;   {   /* function that may throw an error */   },   100 ) ;      setBackoff    setRetry  has a similar API  setRetry . The difference is that it will retry the callback if it fails (throws an error) at exponentially increasing intervals intervals.      import  setBackoff ,   {  clear  as  clearBackoff  }   from   &quot;./set-retry.mjs&quot;  ;   const  id  =   setBackoff (()  =&gt;   {   /* function that may throw an error */   },   100 ) ;      asyncTimeout      import  setTimeoutAsync  from   &quot;./set-timeout-async.mjs&quot;  ;   const  result  =  await  setTimeoutAsync ((arg)  =&gt;  arg ,   100  ,   &quot;hello&quot; ) ;      asyncRetryAsync      import  setRetryAsync  from   &quot;./set-retry-async.mjs&quot;  ;   const  result  =  await  setRetryAsync ((arg)  =&gt;  arg ,   100  ,   &quot;hello&quot; ) ;      asyncBackoffAsync      import  setBackoffAsync  from   &quot;./set-backoff-async.mjs&quot;  ;   const  result  =  await  setBackoffAsync ((arg)  =&gt;  arg ,   100  ,   &quot;hello&quot; ) ;         "
}
